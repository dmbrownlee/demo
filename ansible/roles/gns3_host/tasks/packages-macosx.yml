---
- name: Assert homebrew is installed
  ansible.builtin.assert:
    that: ansible_pkg_mgr == "homebrew"
    fail_msg: "A homebrew installation is required."
- name: Ensure system brews are installed
  community.general.homebrew:
    name: "{{ item }}"
    state: present
  loop: "{{ system_brews }}"
  when:
    - system_brews is defined
    - (system_brews | length > 0)
- name: Ensure system casks are installed
  community.general.homebrew_cask:
    name: "{{ item }}"
    state: present
  loop: "{{ system_casks }}"
  when:
    - system_casks is defined
    - (system_casks | length > 0)
- name: Ensure system DMGs are installed
  block:
    - name: Ensure folder for software downloads exists
      ansible.builtin.file:
        path: "{{ ansible_user_dir }}/Software"
        state: directory
        mode: '0755'
    - name: Get a list of apps installed under /Applications
      ansible.builtin.command: "find /Applications -type d -name '*.app' -maxdepth 1"
      register: installed_apps
      changed_when: false
    - name: Get a list of installed packages
      ansible.builtin.command: "pkgutil --pkgs"
      register: installed_packages
      changed_when: false
    - name: Ensure system software distributed as dmg files has been downloaded
      ansible.builtin.include_tasks: macosx-dmg-installer.yml
      vars:
        dmg: "{{ item }}"
      loop: "{{ system_dmgs }}"
      when:
        - not item.artifact in installed_apps.stdout_lines
        - not item.artifact in installed_packages.stdout_lines
  when:
    - system_dmgs is defined
    - (system_dmgs | length > 0)
# - name: Ensure icons are added to the Dock
#   ansible.builtin.shell: dockutil --find '{{ item.name }}' || dockutil -v --add '{{ item.path }}' --no-restart
#   register: dockadd
#   changed_when: "'item added at end' in dockadd.stdout"
#   loop: "{{ dockitems_to_add }}"
#   notify: launcher-restart-macosx
